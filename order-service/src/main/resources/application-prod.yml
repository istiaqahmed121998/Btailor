spring:
  application:
    name: order-service
  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: classpath:${PUBLIC_KEY_LOCATION}
  cloud:
    consul:
      host: ${CONSUL_HOST:localhost}
      port: ${CONSUL_PORT:8500}
      enabled: true
      discovery:
        enabled: true
        register: true
  data:
    mongodb:
      uri: ${MONGODB_URL}
  kafka:
    bootstrap-servers: ${KAFKA_HOST}:${KAFKA_PORT}
    consumer:
      group-id: order-service-group
      auto-offset-reset: latest           # Prefer latest in prod
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "com.backend.common.events"
    listener:
      missing-topics-fatal: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  grpc:
    client:
      channels:
        payment:
          address: static://payment-service:9090
          negotiationType: plaintext
  threads:
    virtual:
      enabled: true
server:
  port: 8086
