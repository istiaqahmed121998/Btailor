spring:
  application:
    name: auth-user-service
  threads:
    virtual:
      enabled: true
  cloud:
    consul:
      host: ${CONSUL_HOST:localhost}
      port: ${CONSUL_PORT:8500}
      enabled: true
      discovery:
        prefer-ip-address: true
        enabled: true
        register: true
  kafka:
    bootstrap-servers: ${KAFKA_HOST}:${KAFKA_PORT}
    producer:
        # Set the acknowledgment level here
        # Options: 0, 1, or all
        acks: all
        compression-type: gzip
      # Other common producer properties
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        properties:
          # For true exactly-once semantics, enable idempotence.
          # This requires acks=all, max.in.flight.requests.per.connection=5, and retries > 0.
          enable.idempotence: true
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  flyway:
    enabled: true
    clean-disabled: true
    validate-on-migrate: true
    baseline-on-migrate: true
    out-of-order: false
    locations: classpath:db/migration
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:secret123}
server:
  port: ${SERVER_PORT:8081}
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    whitelabel:
      enabled: false
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 2048
management:
  endpoints:
    web:
      exposure:
        include: "health"
  endpoint:
    health:
      show-details: never
logging:
  level:
    root: INFO
jwt:
  private:
    key:
      path: ${JWT_PRIVATE_KEY_PATH}
  public:
    key:
      path: ${JWT_PUBLIC_KEY_PATH}
